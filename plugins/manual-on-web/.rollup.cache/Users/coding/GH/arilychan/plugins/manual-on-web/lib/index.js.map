{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Context } from 'koishi'\nimport path from 'path'\nimport fs from 'fs'\nimport { marked } from 'marked'\n\nconst _boundary = path.join(process.env.NODE_PATH || process.cwd(), 'node_modules')\n\nexport const sharedState = {} as Record<string, any>\nexport const sharedCache = new WeakMap()\nexport const name = 'manual-on-web'\nexport function apply (ctx: Context) {\n  console.log('running')\n  sharedState.installed = true\n  sharedCache.set(ctx, ctx)\n  sharedState.getCtx = () => {\n    return sharedState.get(ctx)\n  }\n\n  ctx.router.get('/manual', _ctx => {\n    _ctx.response.body = 'running'\n  })\n  ctx.router.get('/manual/plugin/:plugin', async _ctx => {\n    // @ts-expect-error we got this\n    const plugin = _ctx.request.params.plugin\n    const boundary = fs.realpathSync(path.resolve(_boundary, plugin))\n    _ctx.response.body = 'plugin: ' + plugin + '\\n'\n    _ctx.response.body += 'boundary:' + boundary + '\\n'\n    let pluginPath = fs.realpathSync(require.resolve(plugin))\n    _ctx.response.body += 'main file:' + pluginPath + '\\n'\n    let relative = path.relative(boundary, pluginPath)\n    let inScope = relative && !relative.startsWith('..') && !path.isAbsolute(relative)\n    let possibleReadme = path.resolve(pluginPath, './readme.md')\n    let gotReadme = fs.existsSync(possibleReadme)\n    _ctx.response.body += 'possible readme:' + possibleReadme + '\\n'\n    _ctx.response.body += 'gotReadme: ' + gotReadme + '\\n'\n    if (gotReadme) {\n      _ctx.response.body += marked.parse(fs.readFileSync(possibleReadme, { encoding: 'utf8' }))\n    } else {\n      while (!gotReadme && inScope) {\n        pluginPath = path.resolve(pluginPath, '..')\n        relative = path.relative(boundary, pluginPath)\n        inScope = relative && !relative.startsWith('..') && !path.isAbsolute(relative)\n        possibleReadme = path.resolve(pluginPath, './readme.md')\n        _ctx.response.body += 'possible readme:' + possibleReadme + '\\n'\n        gotReadme = fs.existsSync(possibleReadme)\n        _ctx.response.body += 'gotReadme: ' + gotReadme + '\\n'\n      }\n      if (!gotReadme) {\n        _ctx.response.body += 'not found.'\n      } else {\n        _ctx.response.body += marked.parse(fs.readFileSync(possibleReadme, { encoding: 'utf8' }))\n      }\n    }\n  })\n  ctx.router.get('/ssr', async _ctx => {\n    const { req } = _ctx\n    let result\n    try {\n      // result = await renderToStringAsync(() => <App url={req.url} />)\n    } catch (err) {\n      console.error(err)\n    } finally {\n      // res.send(result)\n      _ctx.response.body = result\n    }\n  })\n}\n"]}